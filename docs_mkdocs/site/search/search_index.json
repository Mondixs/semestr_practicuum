{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"models/","text":"Models for Django Application Question Model Table Name : question Fields : id : Auto-incrementing primary key (implicit in Django). question_text : CharField , max length 200 characters. pub_date : DateTimeField . Methods: __str__() returns the value of question_text . was_published_recently() checks if the question was published within the last day. Choice Model Table Name : choice Fields : id : Auto-incrementing primary key (implicit in Django). question : Foreign Key to Question model ( on_delete=models.CASCADE ). choice_text : CharField , max length 200 characters. votes : IntegerField , default value is 0. Methods: __str__() returns the value of choice_text . Student Model Table Name : student Fields : id : Auto-incrementing primary key (implicit in Django). name : CharField , max length 100 characters. gender : CharField , max length 10 characters with choices: ['Male', 'Female'] . age : IntegerField . city : CharField , max length 100 characters. academic_pressure : FloatField . study_satisfaction : FloatField . Methods: __str__() returns the value of name .","title":"Models"},{"location":"models/#models-for-django-application","text":"","title":"Models for Django Application"},{"location":"models/#question-model","text":"Table Name : question Fields : id : Auto-incrementing primary key (implicit in Django). question_text : CharField , max length 200 characters. pub_date : DateTimeField .","title":"Question Model"},{"location":"models/#methods","text":"__str__() returns the value of question_text . was_published_recently() checks if the question was published within the last day.","title":"Methods:"},{"location":"models/#choice-model","text":"Table Name : choice Fields : id : Auto-incrementing primary key (implicit in Django). question : Foreign Key to Question model ( on_delete=models.CASCADE ). choice_text : CharField , max length 200 characters. votes : IntegerField , default value is 0.","title":"Choice Model"},{"location":"models/#methods_1","text":"__str__() returns the value of choice_text .","title":"Methods:"},{"location":"models/#student-model","text":"Table Name : student Fields : id : Auto-incrementing primary key (implicit in Django). name : CharField , max length 100 characters. gender : CharField , max length 10 characters with choices: ['Male', 'Female'] . age : IntegerField . city : CharField , max length 100 characters. academic_pressure : FloatField . study_satisfaction : FloatField .","title":"Student Model"},{"location":"models/#methods_2","text":"__str__() returns the value of name .","title":"Methods:"},{"location":"views/","text":"Models for Django Application QuestionViewSet Model Table Name : questionviewset Fields : queryset : Question.objects.all() serializer_class : QuestionSerializer ChoiceViewSet Model Table Name : choiceviewset Fields : queryset : Choice.objects.all() serializer_class : ChoiceSerializer StudentViewSet Model Table Name : studentviewset Fields : queryset : Student.objects.all() serializer_class : StudentSerializer","title":"Views"},{"location":"views/#models-for-django-application","text":"","title":"Models for Django Application"},{"location":"views/#questionviewset-model","text":"Table Name : questionviewset Fields : queryset : Question.objects.all() serializer_class : QuestionSerializer","title":"QuestionViewSet Model"},{"location":"views/#choiceviewset-model","text":"Table Name : choiceviewset Fields : queryset : Choice.objects.all() serializer_class : ChoiceSerializer","title":"ChoiceViewSet Model"},{"location":"views/#studentviewset-model","text":"Table Name : studentviewset Fields : queryset : Student.objects.all() serializer_class : StudentSerializer","title":"StudentViewSet Model"}]}